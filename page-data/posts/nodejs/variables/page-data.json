{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/nodejs/variables","result":{"data":{"markdownRemark":{"id":"661bf3f1-10f2-5635-abd5-d442219c71d8","html":"<p>안녕하세요!</p>\n<p>이번 포스팅 에서는 <code class=\"language-text\">Node.js(Javascript)</code>의 대표 변수 들에 대해 정리하고 각각의 차이에 대해 알아보도록 하겠습니다.<br>\nNode.js 관련 면접을 준비하시는 분이라면 단골 질문이니 알아두시면 좋을 것 같습니다!😄</p>\n<hr>\n<h3 id=\"1-변수-종류\" style=\"position:relative;\"><a href=\"#1-%EB%B3%80%EC%88%98-%EC%A2%85%EB%A5%98\" aria-label=\"1 변수 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 변수 종류</h3>\n<ul>\n<li></li>\n</ul>\n<h4 id=\"2-nodejs-단점\" style=\"position:relative;\"><a href=\"#2-nodejs-%EB%8B%A8%EC%A0%90\" aria-label=\"2 nodejs 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Node.js 단점</h4>\n<ul>\n<li>이벤트 기반 비동기 방식이기 때문에 서버단 로직이 복잡할 경우 <strong>콜백 함수의 늪</strong>에 빠질수 있음</li>\n<li>코드를 <strong>순차적으로 실행하는 것이 아니라</strong> 비동기 방식으로 이벤트를 보내고, 응답(이벤트)이 오면 처리하는 방식이기 때문에 java 개발을 하는 방식으로 설계하고 코드를 짜면 문제가 발생할 수 있음</li>\n<li>단일 스레드(Single thread)이기 때문에 하나의 작업 자체가 많이 걸리는 웹 서비스에는 어울리지 않음</li>\n<li>게시판 형식과 같이 <strong>가벼운 I/O가 많은 웹 서비스</strong>에 어울림</li>\n<li>코드가 수행 되어야 에러가 있는지 알 수 있으며, 에러가 발생한 경우 프로세스가 내려가기 때문에 <strong>테스트가 중요</strong>함</li>\n</ul>\n<h4 id=\"3-어울리는-서비스\" style=\"position:relative;\"><a href=\"#3-%EC%96%B4%EC%9A%B8%EB%A6%AC%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"3 어울리는 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 어울리는 서비스</h4>\n<ul>\n<li>간단한 로직</li>\n<li>대용량 서비스 (동시에 여러 request를 처리함)</li>\n<li>빠른 응답시간이 요구되는 경우</li>\n<li>빠른 개발이 요구되는 경우</li>\n<li>비동기 방식에 어울리는 서비스 (ex. 네트워크 스트리밍 서비스, 채팅 서비스 등)</li>\n</ul>\n<h4 id=\"4-어울리지-않는-서비스\" style=\"position:relative;\"><a href=\"#4-%EC%96%B4%EC%9A%B8%EB%A6%AC%EC%A7%80-%EC%95%8A%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"4 어울리지 않는 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 어울리지 않는 서비스</h4>\n<ul>\n<li>단일 처리가 오래 걸리는 경우: 싱글 스레드이기 때문</li>\n<li>서버 체크 로직이 많은 경우: 비동기 방식 이기 때문에 Callback Hell(콜백 지옥)에 빠지지 않기 위해</li>\n<li>업무 복잡도/난이도가 높은 경우: 에러가 발생하면 서버가 죽기 때문에 코드 품질이 중요함</li>\n</ul>\n<hr>\n<p>오늘 준비한 내용은 여기까지 입니다.<br>\n이번 포스팅이 도움이 되셨거나 궁금한 점이 있으시다면 언제든지 댓글을 달아주세요!🙋🏻‍♀️✨    </p>","fields":{"slug":"/posts/nodejs/variables","tagSlugs":["/tag/nodejs/","/tag/javascript/"]},"frontmatter":{"date":"2021-02-22-16:22:34","description":"이번 포스팅 에서는 `Node.js(Javascript)`의 대표 변수 들에 대해 정리하고 각각의 차이에 대해 알아보도록 하겠습니다.","tags":["Nodejs","Javascript"],"title":"[Node.js] var & let & const 변수의 차이","socialImage":null}}},"pageContext":{"slug":"/posts/nodejs/variables"}},"staticQueryHashes":["251939775","401334301","825871152"]}