{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react/react-axios","result":{"data":{"markdownRemark":{"id":"bc65e129-a8ea-51ae-9818-7dd902486286","html":"<p>안녕하세요!  </p>\n<p>이번 포스팅에서는 React에서 Open API를 통해 데이터를 가져올 때 자주 사용되는 함수인 <code class=\"language-text\">Axios</code>와 <code class=\"language-text\">Fetch</code> 함수에 대해 알아 보도록 하겠습니다!<br>\n두 함수에 대한 공통점과 차이점에 대해 정리 해 보도록 하겠습니다.🤔</p>\n<hr>\n<h2 id=\"1-axios-vs-fetch\" style=\"position:relative;\"><a href=\"#1-axios-vs-fetch\" aria-label=\"1 axios vs fetch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Axios vs. Fetch</h2>\n<ul>\n<li>React에서 개발 시 REST API를 호출하기 위해 <code class=\"language-text\">axios</code>, <code class=\"language-text\">fetch</code> 를 활용하는 방법을 소개 해 드리 고자 합니다.</li>\n<li>둘 다 HTTP 클라이언트 라이브러리고 <code class=\"language-text\">Promise</code> 기반으로 이루어져 있습니다.</li>\n</ul>\n<h2 id=\"2-사용-사례\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80\" aria-label=\"2 사용 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 사용 사례</h2>\n<h4 id=\"2-1-axios\" style=\"position:relative;\"><a href=\"#2-1-axios\" aria-label=\"2 1 axios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. Axios</h4>\n<ul>\n<li><code class=\"language-text\">Axios</code> 함수를 사용 하여 선수의 시즌 아이디 정보를 가져 오는 함수 입니다. (아래는 <code class=\"language-text\">FIGLE</code> 개발 시에 사용된 실제 코드 입니다.)</li>\n<li>여기서는 데이터를 가져오기 위해 <code class=\"language-text\">Get</code> 함수를 사용 하였고, 받아온 데이터를 <code class=\"language-text\">this.state.seasonResult</code> 에 저장 하였습니다.</li>\n<li>아래 url들은 <a href=\"https://developers.nexon.com/fifaonline4/apiList\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FIFA Online 개발자 센터</a> 에 있는 데이터 정보 입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> proxyurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cors-anywhere.herokuapp.com/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> getSeasonIdDetail <span class=\"token operator\">=</span> <span class=\"token string\">'https://static.api.nexon.co.kr/fifaonline4/latest/seasonid.json'</span><span class=\"token punctuation\">;</span>\naxios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>proxyurl <span class=\"token operator\">+</span> getSeasonIdDetail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        seasonResult<span class=\"token operator\">:</span> data\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"2-2-fetch\" style=\"position:relative;\"><a href=\"#2-2-fetch\" aria-label=\"2 2 fetch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. Fetch</h4>\n<ul>\n<li><code class=\"language-text\">Fetch</code> 함수를 사용 하여 선수의 포지션 정보를 가져 오는 함수 입니다. (아래는 <code class=\"language-text\">FIGLE</code> 개발 시에 사용된 실제 코드 입니다.)</li>\n<li>여기서는 데이터를 가져오기 위해 <code class=\"language-text\">Get</code> 함수를 사용 하였고, api를 통해 받아온 데이터를 <code class=\"language-text\">this.state.positionList</code> 에 저장 하였습니다. </li>\n<li>아래 url들은 <a href=\"https://developers.nexon.com/fifaonline4/apiList\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FIFA Online 개발자 센터</a> 에 있는 데이터 정보 입니다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">getPositionList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'/fifaonline4/latest/spposition.json'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n        headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Accept\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"static.api.nexon.co.kr\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Connection\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"keep-alive\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> responseOK <span class=\"token operator\">=</span> response <span class=\"token operator\">&amp;&amp;</span> response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>responseOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            positionList<span class=\"token operator\">:</span> data\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"3-결론\" style=\"position:relative;\"><a href=\"#3-%EA%B2%B0%EB%A1%A0\" aria-label=\"3 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 결론</h2>\n<ul>\n<li>이번에 FIGLE 개발 시 <code class=\"language-text\">axios</code>를 많이 사용 하긴 했는데 개발을 하다 보니 상황에 따라 <code class=\"language-text\">fetch</code> 함수가 더 간단 명료한 경우가 있었습니다.</li>\n<li>그래서 두 가지 중에 무엇이 좋다는 정답은 없는 것 같고, 본인이 개발 하면서 상황에 따라 더 좋은 방향으로 적절하게 사용하는 것이 좋을 듯 합니다!</li>\n</ul>\n<hr>\n<p>오늘 준비한 내용은 여기까지 입니다.<br>\n이번 포스팅이 도움이 되셨거나 궁금한 점이 있으시다면 언제든지 댓글을 달아주세요!🙋🏻‍♀️✨    </p>","fields":{"slug":"/posts/react/react-axios","tagSlugs":["/tag/react/","/tag/axios/","/tag/api/"]},"frontmatter":{"date":"2020-11-11 15:43:12","description":"이번 포스팅에서는 React에서 Open API를 통해 데이터를 가져올 때 자주 사용되는 함수인 `Axios`와 `Fetch` 함수에 대해 알아 보도록 하겠습니다!","tags":["React","Axios","API"],"title":"[React] Axios & Fetch를 이용한 API 호출","socialImage":null}}},"pageContext":{"slug":"/posts/react/react-axios"}},"staticQueryHashes":["251939775","401334301","825871152"]}