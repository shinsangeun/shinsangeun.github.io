{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/nextjs/next-xss","result":{"data":{"markdownRemark":{"id":"c16f0882-294e-5a65-a587-c0895aab8e50","html":"<p>안녕하세요!</p>\n<p>이번 포스팅에서는 <code class=\"language-text\">Next.js</code>에서 <strong>XSS</strong> 취약점 조치하는 방법에 대해 소개해 드리겠습니다.</p>\n<hr>\n<h3 id=\"1-개요\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9C%EC%9A%94\" aria-label=\"1 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 개요</h3>\n<ul>\n<li>이번에 프로젝트 보안 검수를 진행 했는데, next.js로 만든 프로젝트에서 <U>XSS 취약점 조치가 필요하다</U>는 결과가 나왔습니다.</li>\n<li>XSS 취약점 문제가 처음 겪는 일이라서 http 문제인가, svg를 사용해서 그런가 하면서 여러가지 원인을 찾아 보게 되었는데 next.js 공식 홈페이지에서 발견한 설정 덕분에 해결 하게 되었습니다.</li>\n</ul>\n<h3 id=\"2-xss-취약점-이란\" style=\"position:relative;\"><a href=\"#2-xss-%EC%B7%A8%EC%95%BD%EC%A0%90-%EC%9D%B4%EB%9E%80\" aria-label=\"2 xss 취약점 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. XSS 취약점 이란</h3>\n<ul>\n<li>XSS(Cross-site scripting) <strong>사이트 간 스크립팅</strong> 은 웹 애플리케이션에서 많이 나타나는 취약점의 하나로 <strong>웹사이트 관리자가 아닌 웹 페이지에 악성 스크립트를 삽입할 수 있는 취약점</strong> 입니다.</li>\n<li>주로 여러 사용자가 보게되는 전자 게시판에 악성 스크립트가 담긴 글을 올리는 형태로 이루어 집니다. 이 취약점은 <U>웹 애플리케이션이 사용자로부터 입력 받은 값을 제대로 검사하지 않고 사용할 경우</U> 나타납니다.</li>\n<li>이 취약점으로 해커가 사용자의 정보(쿠키, 세션 등)를 탈취하거나, 자동으로 비정상적인 기능을 수행하게 할 수 있습니다. 주로 다른 웹사이트와 정보를 교환하는 식으로 작동하므로 사이트 간 스크립팅 이라고 합니다.</li>\n</ul>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8C%85\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">👉🏻출처: 위키 백과</a></p>\n<h3 id=\"3-nextjs-조치-방법\" style=\"position:relative;\"><a href=\"#3-nextjs-%EC%A1%B0%EC%B9%98-%EB%B0%A9%EB%B2%95\" aria-label=\"3 nextjs 조치 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Next.js 조치 방법</h3>\n<ul>\n<li>이러한 XSS 취약점을 대응하기 위해 구글링을 통해 해결 방안을 찾아보게 되었습니다.</li>\n<li><a href=\"https://nextjs.org/docs/advanced-features/security-headers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">👉🏻공식 사이트</a> 에 소개된 내용에 보면 <code class=\"language-text\">next.config.js</code> 파일에 설정을 추가해주면 됩니다.\n다양한 설정이 있어서 상황에 맞는 값을 <code class=\"language-text\">headers()</code>에 추가해 주면 됩니다. XSS 취약점 조치를 위해 추가한 값은 <strong>X-XSS-Protection</strong> 입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  key: &#39;X-XSS-Protection&#39;,\n  value: &#39;1; mode=block&#39;\n}</code></pre></div>\n<ul>\n<li>프로젝트 루트 경로에 있는 <strong>next.config.js</strong> 파일에 해당 값을 추가 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  async headers() {\n    return [\n      {\n        key: &#39;X-XSS-Protection&#39;,\n        value: &#39;1; mode=block&#39;\n      }\n    ]\n  },\n}</code></pre></div>\n<ul>\n<li>X-XSS-Protection 에 대한 설명으로는, <strong>“이 헤더는 반사된 사이트 간 스크립팅(XSS) 공격을 탐지할 때 페이지가 로드되지 않도록 합니다.<br>\n사이트에서 인라인 JavaScript(‘안전하지 않은 인라인’) 사용을 비활성화하는 강력한 Content-Security-Policy를 구현할 때는 이 보호가 필요하지 않지만,<br>\nCSP를 지원하지 않는 이전 웹 브라우저에 대한 보호 기능을 계속 제공할 수 있습니다.”</strong> 라고 소개 되어 있습니다.</li>\n<li>웹 해킹 기법중 하나의 내용으로써 읽어도 자세한 내용은 잘 이해가 안되어서..어떤 느낌인지만 파악하고, <code class=\"language-text\">headers()</code> 함수에 <strong>X-XSS-Protection</strong> 값을 추가 함으로써 취약점 조치가 해결 되었습니다.<br>\n(사실 취약점 조치가 제대로 되었는지 확인을 못하고 다시 검수 요청을 드렸는데 다행히 해결이 되었다고 하더라구요! 설정 방법도 확인하면 좋을 것 같은데 혹시 아시는 분..?🙋🏻‍♀️🥲)</li>\n</ul>\n<h3 id=\"4-마치며\" style=\"position:relative;\"><a href=\"#4-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"4 마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 마치며</h3>\n<ul>\n<li>Next.js에서 XSS 취약점 조치 하는 방법에 대해 알아 보았습니다. 프론트에서 취약점 대응 방법을 찾아 보다가, 공식 문서를 통해 생각보다 쉽고 간단하게 해결 될 수 있었습니다.</li>\n<li>내용이 도움이 되셨다면 아래 <strong>좋아요</strong>나 <strong>댓글</strong> 부탁 드립니다!👍🏻</li>\n</ul>\n<hr>\n<p>오늘 준비한 내용은 여기까지 입니다.<br>\n이번 포스팅이 도움이 되셨거나 궁금한 점이 있으시다면 언제든지 댓글을 달아주세요!🙋🏻‍♀️✨</p>","fields":{"slug":"/posts/nextjs/next-xss","tagSlugs":["/tag/react/","/tag/next-js/","/tag/xss/","/tag/next-config-js/","/tag/x-xss-protection/","/tag/프론트-보안/","/tag/취약점-대응/"]},"frontmatter":{"date":"2022-06-06 01:44:20","description":"안녕하세요! 이번 포스팅에서는 Next.js에서 XSS 취약점 조치하는 방법에 대해 소개해 드리겠습니다.","tags":["React","Next.js","XSS","next.config.js","X-XSS-Protection","프론트 보안","취약점 대응"],"title":"[Next.js] XSS 취약점과 해결 방안 (next.config.js 설정)","socialImage":null}}},"pageContext":{"slug":"/posts/nextjs/next-xss"}},"staticQueryHashes":["251939775","401334301","825871152"]}